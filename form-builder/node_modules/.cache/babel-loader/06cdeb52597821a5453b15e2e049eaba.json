{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\FormViewer.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\nimport FieldsViewer from './FieldsViewer';\n\nclass FormViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const FormSchema = await unsplash.post('/getFormSchema', {\n        id: this.props.match.params.id\n      }).then(response => {\n        if (response.success) {\n          console.log(this.state.Schema);\n          var schema = JSON.parse(FormSchema.data[0].formSchema);\n          this.setState({\n            Schema: schema\n          });\n          console.log(this.state.Schema);\n        } else alert(response.error);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n      console.log(this.state.Schema);\n    };\n\n    this.state = {\n      id: props.match.params.id,\n      Schema: []\n    };\n  }\n\n  render() {\n    const result = this.state.Schema.map((item, index) => {\n      return React.createElement(FieldsViewer, {\n        key: index,\n        name: item.name,\n        label: item.label,\n        type: item.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.Schema.title)), React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.Schema && [result]));\n  }\n\n}\n\nexport default FormViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\FormViewer.js"],"names":["React","unsplash","FieldsViewer","FormViewer","Component","constructor","props","componentDidMount","FormSchema","post","id","match","params","then","response","success","console","log","state","Schema","schema","JSON","parse","data","formSchema","setState","alert","error","catch","render","result","map","item","index","name","label","type","title","onFormSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQjBC,iBARiB,GAQC,YAAS;AACxB,YAAMC,UAAU,GAAE,MAAMP,QAAQ,CAACQ,IAAT,CAAc,gBAAd,EAA+B;AACnDC,QAAAA,EAAE,EAAC,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBF;AADwB,OAA/B,EAErBG,IAFqB,CAEfC,QAAD,IAAa;AACjB,YAAGA,QAAQ,CAACC,OAAZ,EAAoB;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAa,KAAKC,KAAL,CAAWC,MAAxB;AACA,cAAIC,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWd,UAAU,CAACe,IAAX,CAAgB,CAAhB,EAAmBC,UAA9B,CAAX;AAEA,eAAKC,QAAL,CAAc;AAACN,YAAAA,MAAM,EAACC;AAAR,WAAd;AAEAJ,UAAAA,OAAO,CAACC,GAAR,CAAa,KAAKC,KAAL,CAAWC,MAAxB;AACH,SAPD,MASIO,KAAK,CAACZ,QAAQ,CAACa,KAAV,CAAL;AACX,OAb2B,EAazBC,KAbyB,CAalBD,KAAD,IAAU;AACfX,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CU,KAA5C;AACF,OAf0B,CAAxB;AAgBHX,MAAAA,OAAO,CAACC,GAAR,CAAa,KAAKC,KAAL,CAAWC,MAAxB;AACA,KA1BiB;;AAEd,SAAKD,KAAL,GAAW;AACPR,MAAAA,EAAE,EAACJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EADf;AAEPS,MAAAA,MAAM,EAAC;AAFA,KAAX;AAKH;;AAsBDU,EAAAA,MAAM,GAAE;AACF,UAAMC,MAAM,GAAC,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAe;AAChD,aACA,oBAAC,YAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,IAAI,EAAED,IAAI,CAACE,IAFf;AAGK,QAAA,KAAK,EAAEF,IAAI,CAACG,KAHjB;AAIK,QAAA,IAAI,EAAEH,IAAI,CAACI,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AASU,KAVC,CAAb;AAWF,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKlB,KAAL,CAAWC,MAAX,CAAkBkB,KAA7C,CADJ,CADJ,EAII;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,MAAA,SAAS,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGO,KAAKpB,KAAL,CAAWC,MAAX,IAAqB,CAACW,MAAD,CAH5B,CAJJ,CADJ;AAcH;;AAxDmC;;AA2DxC,eAAe3B,UAAf","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport FieldsViewer from './FieldsViewer';\r\n\r\nclass FormViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:props.match.params.id,\r\n            Schema:[]\r\n\r\n        }\r\n    }\r\n     componentDidMount=async()=>{\r\n        const FormSchema= await unsplash.post('/getFormSchema',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.success){\r\n                console.log( this.state.Schema);\r\n                var schema=JSON.parse(FormSchema.data[0].formSchema);\r\n\r\n                this.setState({Schema:schema});\r\n\r\n                console.log( this.state.Schema);\r\n            }\r\n            else\r\n                alert(response.error);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log( this.state.Schema);\r\n    }\r\n    \r\n    \r\n    render(){\r\n          const result=this.state.Schema.map((item, index)=>{\r\n            return(\r\n            <FieldsViewer\r\n                key={index} \r\n                name={item.name}\r\n                 label={item.label}\r\n                 type={item.type}\r\n\r\n                    />\r\n          \r\n                    )})\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div >\r\n                    <h1 className=\"ui header\">{this.state.Schema.title}</h1>\r\n                </div>\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\"> \r\n                {\r\n                        \r\n                       this.state.Schema && [result]\r\n                }\r\n                </form>\r\n                        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormViewer;\r\n"]},"metadata":{},"sourceType":"module"}