{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\FieldsViewer.js\";\nimport React from 'react';\n\nconst FieldsViewer = ({\n  label,\n  handleChange,\n  type = \"text\"\n}) => {\n  if (type === \"color\") {\n    e.target.value = \"#000000\";\n    var element = document.getElementById(label);\n    element.handleChange(e.target.value);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, label, \":\"), React.createElement(\"input\", {\n    required: true,\n    type: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nexport default FieldsViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\FieldsViewer.js"],"names":["React","FieldsViewer","label","handleChange","type","e","target","value","element","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAC,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,IAAI,GAAC;AAA3B,CAAD,KAAsC;AAErD,MAAGA,IAAI,KAAG,OAAV,EACA;AACIC,IAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAe,SAAf;AACA,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBR,KAAxB,CAAd;AACAM,IAAAA,OAAO,CAACL,YAAR,CAAqBE,CAAC,CAACC,MAAF,CAASC,KAA9B;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,KAAR,MADH,EAEG;AACK,IAAA,QAAQ,MADb;AAEK,IAAA,IAAI,EAAEE,IAFX;AAGK,IAAA,QAAQ,EAAED,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADJ;AAcH,CAtBD;;AAwBA,eAAeF,YAAf","sourcesContent":["import React from 'react';\r\n\r\nconst FieldsViewer=({label, handleChange, type=\"text\"})=>{\r\n    \r\n    if(type===\"color\")\r\n    {\r\n        e.target.value=\"#000000\";\r\n        var element = document.getElementById(label);\r\n        element.handleChange(e.target.value);\r\n    }\r\n    return(\r\n        <div>\r\n           <label>{label}:</label>\r\n           <input\r\n                required\r\n                type={type}\r\n                onChange={handleChange}\r\n                >          \r\n           </input>\r\n        </div>\r\n    );\r\n        \r\n    \r\n\r\n}\r\n\r\nexport default FieldsViewer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}