{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\DataViewer.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\nimport { async } from 'q';\n\nclass DataViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.componentDidMount = async () => {\n      this.getFormSchema();\n      this.getFormData();\n    };\n\n    this.getFormData = async () => {\n      await unsplash.post('/getFormData', {\n        id: this.props.match.params.id\n      }).then(response => {\n        if (response.data.length > 0) {\n          for (var i = 0; i < response.data.length; i++) {\n            var formObj = JSON.parse(response.data[i].data);\n            this.setState(prevState => ({\n              data: [...prevState.data, formObj]\n            }));\n          }\n        } else {}\n\n        console.log(response);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n      console.log(this.state);\n    };\n\n    this.getFormSchema = async () => {\n      await unsplash.post('/getFormSchema', {\n        id: this.props.match.params.id\n      }).then(response => {\n        if (response.data.success === true) {\n          var schema = JSON.parse(response.data.data[0].formSchema);\n          this.setState({\n            headers: schema.properties\n          });\n          this.setState({\n            flag: true\n          });\n        } else console.log(response);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n      console.log(this.state);\n    };\n\n    this.getKeys = function () {\n      return Object.keys(this.state.headers);\n    };\n\n    this.state = {\n      headers: [],\n      flag: false,\n      data: []\n    };\n  }\n\n  renderTableData() {\n    return this.state.data.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, props.data[key]);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"ui celled table\",\n      id: \"FormData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.renderTableHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.renderTableData())), React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: () => this.nextPath('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Back\"));\n  }\n\n}\n\nexport default DataViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\DataViewer.js"],"names":["React","unsplash","async","DataViewer","Component","constructor","props","nextPath","path","history","push","componentDidMount","getFormSchema","getFormData","post","id","match","params","then","response","data","length","i","formObj","JSON","parse","setState","prevState","console","log","catch","error","state","success","schema","formSchema","headers","properties","flag","getKeys","Object","keys","renderTableData","map","key","index","render","marginTop","renderTableHeader"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport { async } from 'q';\r\n\r\nclass DataViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            headers:[],\r\n            flag:false,\r\n            data:[]\r\n        }\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount=async()=>{\r\n        this.getFormSchema();\r\n        this.getFormData();\r\n        \r\n    }\r\n\r\n    getFormData=async()=>{\r\n        await unsplash.post('/getFormData',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.length>0){\r\n\r\n                for(var i=0;i<response.data.length;i++)\r\n                {\r\n                    var  formObj=JSON.parse(response.data[i].data)\r\n\r\n                    this.setState(prevState => ({\r\n                        data: [...prevState.data,formObj]\r\n                    }))\r\n                }\r\n \r\n            }\r\n            else{\r\n               \r\n\r\n            }\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state);\r\n    }\r\n    getFormSchema=async()=>{\r\n        await unsplash.post('/getFormSchema',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.success===true){\r\n                var schema=JSON.parse(response.data.data[0].formSchema);\r\n                this.setState({headers:schema.properties});\r\n                this.setState({flag:true});\r\n              \r\n            }\r\n            else\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state);\r\n    }\r\n\r\n    // renderTableHeader() {\r\n    //     if(this.state.flag){\r\n    //         let header = this.state.headers\r\n    //         return header.map((item, index) => {\r\n    //            return <th key={index}>{item.label}</th>\r\n    //         })\r\n    //     }\r\n    \r\n    //  }\r\n\r\n    getKeys = function(){\r\n        return Object.keys( this.state.headers);\r\n        }\r\n     renderTableData() {\r\n        return this.state.data.keys.map((key, index)=>{\r\n            return <td key={props.data[key]}>{props.data[key]}</td>\r\n            })\r\n     }\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n            <table className=\"ui celled table\" id='FormData'>\r\n                <thead>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                </thead>\r\n               <tbody>\r\n               {this.renderTableData()}\r\n               </tbody>\r\n            </table>\r\n                 <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataViewer;"]},"metadata":{},"sourceType":"module"}