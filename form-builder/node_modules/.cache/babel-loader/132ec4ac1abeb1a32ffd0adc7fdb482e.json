{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\FormViewer.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\nimport FieldsViewer from './FieldsViewer';\n\nclass FormViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.g = async () => {};\n\n    this.state = {\n      id: props.match.params.id,\n      Schema: {}\n    };\n  }\n\n  async componentWillMount() {\n    const FormSchema = await unsplash.post('/getFormSchema', {\n      id: this.props.match.params.id\n    });\n    var schema = JSON.parse(FormSchema.data[0].formSchema);\n    this.setState({\n      Schema: schema\n    });\n    console.log(this.state.Schema.properties);\n  }\n\n  render() {\n    // const result = this.state.Schema.properties.map((field, index) =>{\n    //     return(\n    //         <FieldsViewer\n    //             key={index} \n    //             name={field.name}\n    //             label={field.label}\n    //             type={field.type}\n    //         />\n    //     )\n    //    })\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.Schema.title)), React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default FormViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\FormViewer.js"],"names":["React","unsplash","FieldsViewer","FormViewer","Component","constructor","props","g","state","id","match","params","Schema","componentWillMount","FormSchema","post","schema","JSON","parse","data","formSchema","setState","console","log","properties","render","title","onFormSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBjBC,CAtBiB,GAsBf,YAAS,CAEX,CAxBiB;;AAEd,SAAKC,KAAL,GAAW;AACPC,MAAAA,EAAE,EAACH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EADf;AAEPG,MAAAA,MAAM,EAAC;AAFA,KAAX;AAKH;;AACD,QAAMC,kBAAN,GAA0B;AAEtB,UAAMC,UAAU,GAAC,MAAMb,QAAQ,CAACc,IAAT,CAAc,gBAAd,EAA+B;AAClDN,MAAAA,EAAE,EAAC,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF;AADuB,KAA/B,CAAvB;AAIA,QAAIO,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWJ,UAAU,CAACK,IAAX,CAAgB,CAAhB,EAAmBC,UAA9B,CAAX;AAEA,SAAKC,QAAL,CAAc;AAACT,MAAAA,MAAM,EAACI;AAAR,KAAd;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKf,KAAL,CAAWI,MAAX,CAAkBY,UAA/B;AACH;;AAQDC,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKjB,KAAL,CAAWI,MAAX,CAAkBc,KAA7C,CADJ,CADJ,EAII;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,MAAA,SAAS,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAcH;;AAtDmC;;AAyDxC,eAAexB,UAAf","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport FieldsViewer from './FieldsViewer';\r\n\r\nclass FormViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:props.match.params.id,\r\n            Schema:{}\r\n\r\n        }\r\n    }\r\n    async componentWillMount(){\r\n\r\n        const FormSchema=await unsplash.post('/getFormSchema',{\r\n            id:this.props.match.params.id\r\n        });\r\n\r\n        var schema=JSON.parse(FormSchema.data[0].formSchema);\r\n\r\n        this.setState({Schema:schema});\r\n\r\n        console.log( this.state.Schema.properties);\r\n    }\r\n    \r\n\r\n     g=async()=>{\r\n\r\n    }\r\n     \r\n\r\n    render(){\r\n        // const result = this.state.Schema.properties.map((field, index) =>{\r\n        //     return(\r\n        //         <FieldsViewer\r\n        //             key={index} \r\n        //             name={field.name}\r\n        //             label={field.label}\r\n        //             type={field.type}\r\n                    \r\n        //         />\r\n        //     )\r\n        //    })\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div >\r\n                    <h1 className=\"ui header\">{this.state.Schema.title}</h1>\r\n                </div>\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\"> \r\n                {\r\n                        \r\n                        //this.state.Schema && [result]\r\n                }\r\n                </form>\r\n                        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormViewer;\r\n"]},"metadata":{},"sourceType":"module"}