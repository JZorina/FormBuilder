{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\DataViewer.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\n\nclass DataViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.componentDidMount = async () => {\n      await unsplash.post('/getFormData', {\n        id: this.props.match.params.id\n      }).then(response => {\n        if (response.data.length > 0) {\n          for (var i = 0; i < response.data.length; i++) {\n            //Schema=(JSON.parse(TableData.data[i].formSchema));\n            var formObj = {\n              row: response.data[i]\n            };\n            this.setState(prevState => ({\n              data: [...prevState.data, formObj]\n            }));\n          }\n        } else {}\n\n        console.log(response);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      headers: [],\n      data: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"ui celled table\",\n      id: \"FormData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: () => this.nextPath('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Back\"));\n  }\n\n}\n\nexport default DataViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\DataViewer.js"],"names":["React","unsplash","DataViewer","Component","constructor","props","nextPath","path","history","push","componentDidMount","post","id","match","params","then","response","data","length","i","formObj","row","setState","prevState","console","log","catch","error","state","headers","render","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,QAPkB,GAORC,IAAD,IAAQ;AACb,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwBF,IAAxB;AACH,KATiB;;AAAA,SAWlBG,iBAXkB,GAWA,YAAS;AACvB,YAAMT,QAAQ,CAACU,IAAT,CAAc,cAAd,EAA6B;AAC/BC,QAAAA,EAAE,EAAC,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBF;AADI,OAA7B,EAEHG,IAFG,CAEGC,QAAD,IAAa;AACjB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAqB,CAAxB,EAA0B;AAEtB,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,QAAQ,CAACC,IAAT,CAAcC,MAA5B,EAAmCC,CAAC,EAApC,EACA;AACI;AACA,gBAAKC,OAAO,GAAC;AACTC,cAAAA,GAAG,EAACL,QAAQ,CAACC,IAAT,CAAcE,CAAd;AADK,aAAb;AAKA,iBAAKG,QAAL,CAAcC,SAAS,KAAK;AACxBN,cAAAA,IAAI,EAAE,CAAC,GAAGM,SAAS,CAACN,IAAd,EAAmBG,OAAnB;AADkB,aAAL,CAAvB;AAGH;AAEJ,SAfD,MAgBI,CAGH;;AACDI,QAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACP,OAxBS,EAwBPU,KAxBO,CAwBAC,KAAD,IAAU;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,KAA5C;AACF,OA1BQ,CAAN;AA2BHH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAjB;AACA,KAxCiB;;AAEd,SAAKA,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AAEPZ,MAAAA,IAAI,EAAC;AAFE,KAAX;AAIH;;AAmCDa,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,EAAE,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADA,EAMK;AACD,MAAA,KAAK,EAAE;AAACA,QAAAA,SAAS,EAAC;AAAX,OADN;AAED,MAAA,SAAS,EAAC,WAFT;AAGD,MAAA,OAAO,EAAE,MAAI,KAAKzB,QAAL,CAAc,GAAd,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANL,CADJ;AAeH;;AA1DmC;;AA6DxC,eAAeJ,UAAf","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\n\r\nclass DataViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            headers:[],\r\n            data:[]\r\n        }\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount=async()=>{\r\n        await unsplash.post('/getFormData',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.length>0){\r\n\r\n                for(var i=0;i<response.data.length;i++)\r\n                {\r\n                    //Schema=(JSON.parse(TableData.data[i].formSchema));\r\n                    var  formObj={\r\n                        row:response.data[i],\r\n\r\n                       \r\n                    }\r\n                    this.setState(prevState => ({\r\n                        data: [...prevState.data,formObj]\r\n                    }))\r\n                }\r\n \r\n            }\r\n            else{\r\n               \r\n\r\n            }\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n            <table className=\"ui celled table\" id='FormData'>\r\n               <tbody>\r\n                 \r\n               </tbody>\r\n            </table>\r\n                 <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataViewer;"]},"metadata":{},"sourceType":"module"}