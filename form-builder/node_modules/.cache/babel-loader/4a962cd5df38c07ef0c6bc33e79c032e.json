{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\nimport Table from './Table';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.state = {\n      forms: [] // CreateForm:false\n\n    };\n  } //componentDidMount=async()=>{\n\n\n  async componentDidMount() {\n    var TableData = await unsplash.get('/getTableDetails', {}).then(response => {\n      if (response.success == 'false') {} else {\n        for (var i = 0; i < response.data.length; i++) {\n          //Schema=(JSON.parse(TableData.data[i].formSchema));\n          var formObj = {\n            id: response.data[i].id,\n            title: response.data[i].title\n          };\n          this.setState(prevState => ({\n            forms: [...prevState.forms, formObj]\n          }));\n        }\n      }\n    }).catch(error => {\n      console.log(\"got error while posting data\", error);\n    });\n    const TableData1 = await unsplash.get('/getSubmitCounts', {}).then(response => {\n      if (response.success == 'false') {} else {\n        console.log(response);\n\n        const forms = _objectSpread({}, this.state.forms);\n\n        forms[response.indexOf(formid)]['count'] = response.count(formid);\n        console.log(forms); // this.setState({formData:fields});\n        //     this.setState(prevState => ({\n        //         forms: [...prevState.forms,formObj]\n        //     }))\n      }\n    }).catch(error => {\n      console.log(\"got error while posting data\", error);\n    });\n    console.log(this);\n  }\n\n  render() {\n    // console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Table, {\n      forms: this.state.forms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: () => this.nextPath('/Wizard'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"CreateForm\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\App.js"],"names":["React","unsplash","Table","App","Component","constructor","props","nextPath","path","history","push","state","forms","componentDidMount","TableData","get","then","response","success","i","data","length","formObj","id","title","setState","prevState","catch","error","console","log","TableData1","indexOf","formid","count","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport Table from './Table';\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            forms:[],\r\n            // CreateForm:false\r\n        };\r\n      \r\n    }\r\n    //componentDidMount=async()=>{\r\n    async componentDidMount(){\r\n        var TableData=await unsplash.get('/getTableDetails',{\r\n        }).then((response)=> {\r\n            if(response.success=='false'){\r\n\r\n            }\r\n            else{\r\n               \r\n                for(var i=0;i<response.data.length;i++)\r\n                {\r\n                    //Schema=(JSON.parse(TableData.data[i].formSchema));\r\n                    var  formObj={\r\n                        id:response.data[i].id,\r\n\r\n                        title:response.data[i].title\r\n                    }\r\n                    this.setState(prevState => ({\r\n                        forms: [...prevState.forms,formObj]\r\n                    }))\r\n                }\r\n            \r\n        }\r\n        }).catch((error)=> {\r\n            console.log(\"got error while posting data\", error);\r\n            });\r\n\r\n            const TableData1=await unsplash.get('/getSubmitCounts',{\r\n                \r\n            }).then((response)=> {\r\n                if(response.success=='false'){\r\n                  \r\n                }\r\n                else{\r\nconsole.log(response);\r\n                   \r\n                    const forms={...this.state.forms}\r\n                    forms[response.indexOf(formid)]['count']= response.count(formid);\r\n                    console.log(forms);\r\n                    // this.setState({formData:fields});\r\n\r\n                    //     this.setState(prevState => ({\r\n                    //         forms: [...prevState.forms,formObj]\r\n                    //     }))\r\n                    \r\n            \r\n                }\r\n            }).catch((error)=> {\r\n                console.log(\"got error while posting data\", error);\r\n                });\r\n                console.log(this);\r\n    }\r\n   \r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n  \r\n    render(){\r\n        // console.log(this.props);\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n                <Table forms={this.state.forms}/>\r\n                <button\r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={()=>this.nextPath('/Wizard')}\r\n                >\r\n                 CreateForm\r\n                </button>   \r\n                {/* { this.state.CreateForm && <Wizard/> } */}\r\n                {/* <Wizard GetForm={this.GetFormProperties}/> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}