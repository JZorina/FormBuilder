{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\DataViewer.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\n\nclass DataViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.componentDidMount = async () => {\n      const FormSchema = await unsplash.post('/getFormData', {\n        id: this.props.match.params.id\n      }).then(response => {\n        if (response.data.length > 0) {\n          const data = JSON.parse(response.data);\n          console.log(data);\n        } else {}\n\n        console.log(response);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n      console.log(this.state);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"ui celled table\",\n      id: \"FormData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: () => this.nextPath('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Back\"));\n  }\n\n}\n\nexport default DataViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\DataViewer.js"],"names":["React","unsplash","DataViewer","Component","constructor","props","nextPath","path","history","push","componentDidMount","FormSchema","post","id","match","params","then","response","data","length","JSON","parse","console","log","catch","error","state","render","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,QANkB,GAMRC,IAAD,IAAQ;AACb,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwBF,IAAxB;AACH,KARiB;;AAAA,SAUlBG,iBAVkB,GAUA,YAAS;AACvB,YAAMC,UAAU,GAAE,MAAMV,QAAQ,CAACW,IAAT,CAAc,cAAd,EAA6B;AACjDC,QAAAA,EAAE,EAAC,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBF;AADsB,OAA7B,EAErBG,IAFqB,CAEfC,QAAD,IAAa;AACjB,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAqB,CAAxB,EAA0B;AACtB,gBAAMD,IAAI,GAACE,IAAI,CAACC,KAAL,CAAWJ,QAAQ,CAACC,IAApB,CAAX;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH,SAHD,MAII,CAGH;;AACDI,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACP,OAZ2B,EAYzBO,KAZyB,CAYlBC,KAAD,IAAU;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,KAA5C;AACF,OAd0B,CAAxB;AAeHH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAjB;AACA,KA3BiB;;AAEd,SAAKA,KAAL,GAAW,EAAX;AAGH;;AAuBDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,EAAE,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADA,EAMK;AACD,MAAA,KAAK,EAAE;AAACA,QAAAA,SAAS,EAAC;AAAX,OADN;AAED,MAAA,SAAS,EAAC,WAFT;AAGD,MAAA,OAAO,EAAE,MAAI,KAAKtB,QAAL,CAAc,GAAd,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANL,CADJ;AAeH;;AA7CmC;;AAgDxC,eAAeJ,UAAf","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\n\r\nclass DataViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount=async()=>{\r\n        const FormSchema= await unsplash.post('/getFormData',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.length>0){\r\n                const data=JSON.parse(response.data);\r\n                console.log(data);\r\n            }\r\n            else{\r\n               \r\n\r\n            }\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n            <table className=\"ui celled table\" id='FormData'>\r\n               <tbody>\r\n                 \r\n               </tbody>\r\n            </table>\r\n                 <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataViewer;"]},"metadata":{},"sourceType":"module"}