{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\FormViewer.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\nimport FieldsViewer from './FieldsViewer';\nimport { tsConstructSignatureDeclaration } from '@babel/types';\nvar result;\n\nclass FormViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const FormSchema = await unsplash.post('/getFormSchema', {\n        id: this.props.match.params.id\n      }).then(response => {\n        if (response.data.success === true) {\n          var schema = JSON.parse(response.data.data[0].formSchema);\n          this.setState({\n            Schema: schema\n          });\n          this.setState({\n            flag: true\n          });\n        } else console.log(response);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n      console.log(this.state.Schema);\n    };\n\n    this.onFormSubmit = e => {\n      //prevent the page refreshing every 'enter' press \n      e.preventDefault();\n    };\n\n    this.SaveForm = e => {// const dataObject={\n      // };\n      // unsplash.post(\"/SaveData\",{\n      //     data: dataObject\n      // }).then((response)=> {\n      //    console.log(\"Data submitted successfully: \", response);\n      // }).catch((error)=> {\n      //    console.log(\"got errr while posting data\", error);\n      // });\n    };\n\n    this.ChangeVal = e => {\n      console.log(e); //this.setState({ formData: e.target.value });\n    };\n\n    this.state = {\n      id: props.match.params.id,\n      Schema: [],\n      flag: false,\n      formData: []\n    };\n  }\n\n  render() {\n    if (this.state.flag) {\n      result = this.state.Schema.properties.map((item, index) => {\n        return React.createElement(FieldsViewer, {\n          key: index,\n          name: item.name,\n          label: item.label,\n          type: item.type,\n          handleChange: this.ChangeVal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.Schema.title)), React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.flag && [result], React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: this.SaveForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Done!\")));\n  }\n\n}\n\nexport default FormViewer;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\FormViewer.js"],"names":["React","unsplash","FieldsViewer","tsConstructSignatureDeclaration","result","FormViewer","Component","constructor","props","componentDidMount","FormSchema","post","id","match","params","then","response","data","success","schema","JSON","parse","formSchema","setState","Schema","flag","console","log","catch","error","state","onFormSubmit","e","preventDefault","SaveForm","ChangeVal","formData","render","properties","map","item","index","name","label","type","title","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport FieldsViewer from './FieldsViewer';\r\nimport { tsConstructSignatureDeclaration } from '@babel/types';\r\nvar result;\r\nclass FormViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:props.match.params.id,\r\n            Schema:[],\r\n            flag:false,\r\n            formData:[]\r\n\r\n        }\r\n\r\n    }\r\n     componentDidMount=async()=>{\r\n        const FormSchema= await unsplash.post('/getFormSchema',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.success===true){\r\n                var schema=JSON.parse(response.data.data[0].formSchema);\r\n                this.setState({Schema:schema});\r\n                this.setState({flag:true});\r\n            }\r\n            else\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state.Schema);\r\n    }\r\n    \r\n    onFormSubmit=(e)=>{\r\n        //prevent the page refreshing every 'enter' press \r\n        e.preventDefault();\r\n        \r\n \r\n    }\r\n    SaveForm=(e)=>\r\n    {\r\n                // const dataObject={\r\n           \r\n        // };\r\n        // unsplash.post(\"/SaveData\",{\r\n        //     data: dataObject\r\n        // }).then((response)=> {\r\n        //    console.log(\"Data submitted successfully: \", response);\r\n        // }).catch((error)=> {\r\n        //    console.log(\"got errr while posting data\", error);\r\n        // });\r\n    }\r\n    ChangeVal=(e)=>{\r\n        console.log(e);\r\n        //this.setState({ formData: e.target.value });\r\n    }\r\n    render(){  \r\n        if(this.state.flag){\r\n            result=this.state.Schema.properties.map((item, index)=>{\r\n\r\n                return(\r\n                <FieldsViewer\r\n                    key={index} \r\n                    name={item.name}\r\n                    label={item.label}\r\n                    type={item.type}\r\n                    handleChange={this.ChangeVal}\r\n\r\n                        />\r\n            \r\n                        )})\r\n            }\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div >\r\n                    <h1 className=\"ui header\">{this.state.Schema.title}</h1>\r\n                </div>\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\"> \r\n                {     \r\n                      this.state.flag && [result]\r\n                }\r\n                 <button \r\n                    type='submit'\r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={this.SaveForm}>\r\n                       Done!\r\n                    </button>\r\n                </form>\r\n                        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormViewer;\r\n"]},"metadata":{},"sourceType":"module"}