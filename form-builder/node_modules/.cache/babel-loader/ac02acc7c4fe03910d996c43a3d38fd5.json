{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\form-builder\\\\src\\\\components\\\\Wizard.js\";\nimport React from 'react';\nimport PropertyCard from './PropertyCard';\nimport FieldsViewer from './FieldsViewer';\nimport unsplash from '../api/unsplash';\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.CreateProperty = () => {\n      this.setState({\n        showCard: true\n      });\n    };\n\n    this.onFormSubmit = e => {\n      //prevent the page refreshing every 'enter' press \n      e.preventDefault();\n    };\n\n    this.AddField = e => {\n      var prevState = JSON.parse(e);\n      this.setState({\n        name: prevState['name']\n      });\n      this.setState({\n        label: prevState['label']\n      });\n      this.setState({\n        type: prevState['type']\n      });\n      this.setState({\n        showCard: false\n      }); // console.log(this);  \n\n      this.pushFieldToFields();\n    };\n\n    this.pushFieldToFields = () => {\n      this.setState(prevState => ({\n        fields: [...prevState.fields, {\n          name: prevState.name,\n          label: prevState.label,\n          type: prevState.type\n        }]\n      }));\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        label: ''\n      });\n      this.setState({\n        type: ''\n      }); //console.log(this);  \n    };\n\n    this.SaveForm = () => {\n      const formObject = {\n        title: this.state.title,\n        properties: this.state.fields\n      };\n      unsplash.post(\"/AddForm\", {\n        form: formObject\n      }).then(response => {\n        console.log(\"Data submitted successfully: \", response);\n      }).catch(error => {\n        console.log(\"got error while posting data\", error);\n      });\n    };\n\n    this.nextPath = path => {\n      this.props.history.push(path);\n    };\n\n    this.state = {\n      showCard: false,\n      title: '',\n      type: '',\n      name: '',\n      label: '',\n      fields: []\n    };\n    this.AddField = this.AddField.bind(this);\n    this.CreateProperty = this.CreateProperty.bind(this);\n  }\n\n  render() {\n    const result = this.state.fields.map((field, index) => {\n      return React.createElement(FieldsViewer, {\n        key: index,\n        name: field.name,\n        label: field.label,\n        type: field.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        fontSize: \"2em\"\n      },\n      className: \"ui header\",\n      placeholder: \"Place your form title here\",\n      type: \"text\",\n      value: this.state.title,\n      onChange: e => this.setState({\n        title: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: this.CreateProperty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Add Field\")), this.state.showCard && React.createElement(PropertyCard, {\n      GetPropertyJson: this.AddField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.fields.length > 0 && [result]), React.createElement(\"div\", {\n      style: {\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: this.SaveForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Done building my form\")))), React.createElement(\"button\", {\n      style: {\n        marginTop: \"50px\"\n      },\n      className: \"ui button\",\n      onClick: () => this.nextPath('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Back\"));\n  }\n\n}\n\nexport default Wizard;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\form-builder\\src\\components\\Wizard.js"],"names":["React","PropertyCard","FieldsViewer","unsplash","Wizard","Component","constructor","props","CreateProperty","setState","showCard","onFormSubmit","e","preventDefault","AddField","prevState","JSON","parse","name","label","type","pushFieldToFields","fields","SaveForm","formObject","title","state","properties","post","form","then","response","console","log","catch","error","nextPath","path","history","push","bind","render","result","map","field","index","fontSize","target","value","marginTop","length","alignItems","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropertyCard from './PropertyCard';\r\nimport FieldsViewer from './FieldsViewer';\r\nimport unsplash from '../api/unsplash';\r\n\r\n\r\nclass Wizard extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showCard:false,\r\n            title:'',\r\n            type:'',\r\n            name:'',\r\n            label:'',\r\n            fields:[]\r\n            \r\n            \r\n        };\r\n        this.AddField = this.AddField.bind(this);\r\n        this.CreateProperty = this.CreateProperty.bind(this);\r\n\r\n    }\r\n\r\n    CreateProperty=()=>{\r\n        this.setState({showCard:true});\r\n    }\r\n    onFormSubmit=(e)=>{\r\n        //prevent the page refreshing every 'enter' press \r\n        e.preventDefault();\r\n \r\n    }\r\n    AddField=(e)=>{\r\n        var prevState = JSON.parse(e);\r\n        this.setState({name:prevState['name']});\r\n        this.setState({label:prevState['label']});\r\n        this.setState({type:prevState['type']});\r\n        this.setState({showCard:false}); \r\n        // console.log(this);  \r\n        this.pushFieldToFields();\r\n    }\r\n\r\n    pushFieldToFields=()=>{\r\n        this.setState(prevState => ({\r\n            fields: [...prevState.fields, {name:prevState.name,\r\n                label:prevState.label,\r\n                type:prevState.type}]\r\n          }))\r\n        this.setState({name:''});\r\n        this.setState({label:''});\r\n        this.setState({type:''});\r\n\r\n          //console.log(this);  \r\n    }\r\n\r\n\r\n    SaveForm=()=>\r\n    {\r\n        const formObject={\r\n            title:this.state.title,\r\n            properties:this.state.fields\r\n        };\r\n        unsplash.post(\"/AddForm\",{\r\n            form: formObject\r\n        }).then((response)=> {\r\n           console.log(\"Data submitted successfully: \", response);\r\n        }).catch((error)=> {\r\n           console.log(\"got error while posting data\", error);\r\n        });\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n    render(){\r\n        const result = this.state.fields.map((field, index) =>{\r\n            return(\r\n                <FieldsViewer\r\n                    key={index} \r\n                    name={field.name}\r\n                    label={field.label}\r\n                    type={field.type}\r\n                    \r\n                />\r\n            )\r\n            })\r\n          \r\n        return(\r\n            <div className=\"ui segment\">\r\n            <form onSubmit={this.onFormSubmit} className=\"ui form\"> \r\n                <div className=\"field\">\r\n                    <input \r\n                        style={{fontSize : \"2em\"}}\r\n                        className=\"ui header\"\r\n                        placeholder=\"Place your form title here\"\r\n                        type=\"text\" \r\n                        value={this.state.title } \r\n                        onChange={(e)=>this.setState({title:e.target.value})}\r\n                    />\r\n\r\n                    <div>\r\n\r\n                    <button \r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={this.CreateProperty}>\r\n                        Add Field\r\n                    </button>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.showCard && <PropertyCard GetPropertyJson={this.AddField}/>\r\n                    }\r\n\r\n                  <div>\r\n                    {\r\n                        \r\n                        this.state.fields.length>0 && [result]\r\n                    }\r\n                    </div>\r\n                    <div style={{alignItems : \"center\", \r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\"}}>\r\n                    <button \r\n                     type='submit'\r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={this.SaveForm}>\r\n                       Done building my form\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button>\r\n        </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Wizard;"]},"metadata":{},"sourceType":"module"}