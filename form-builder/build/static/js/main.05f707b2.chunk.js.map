{"version":3,"sources":["api/unsplash.js","components/Table.js","components/App.js","components/WizardField.js","components/DropDownWizardField.js","components/FormViewer.js","components/PropertyCard.js","components/FieldsViewer.js","components/Wizard.js","components/DataViewer.js","components/Start.js","index.js"],"names":["axios","create","headers","Accept","Content-Type","baseURL","Table","react_default","a","createElement","className","this","props","forms","map","item","key","data-label","id","title","count","href","concat","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextPath","path","history","push","state","unsplash","get","then","response","success","i","data","length","formObj","_this2","setState","prevState","toConsumableArray","catch","error","console","log","_this3","style","marginTop","components_Table","onClick","WizardField","_ref","label","name","handleChange","_ref$type","type","value","onChange","typeOptions","text","DropDownWizardField","result","Dropdown","placeholder","clearable","options","selection","PropertyCard","ChangeName","e","target","ChangeLabel","ChangeType","CreateJson","GetPropertyJson","JSON","stringify","components_WizardField","onUpdate","components_DropDownWizardField","variant","FieldsViewer","Wizard","CreateProperty","showCard","onFormSubmit","preventDefault","AddField","parse","pushFieldToFields","fields","SaveForm","formObject","properties","post","form","bind","assertThisInitialized","field","index","components_FieldsViewer","onSubmit","components_PropertyCard","FormViewer","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","match","params","schema","formSchema","Schema","flag","stop","formData","ChangeVal","objectSpread","DataViewer","row","Start","react_router_dom","react_router","exact","component","ReactDOM","render","components_Start","document","querySelector"],"mappings":"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","file":"static/js/main.05f707b2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\n export default axios.create({\r\n    headers:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'},\r\n    baseURL:'http://127.0.0.1:3001'\r\n \r\n   \r\n});\r\n\r\n","import React from 'react';\r\n\r\n// import unsplash from '../api/unsplash';\r\nclass Table extends React.Component{\r\n        // constructor(props){\r\n        // super(props);\r\n        // this.state = {forms:this.props.forms}\r\n    //}\r\n\r\n    render(){\r\n\r\n        \r\n       // console.log(this);\r\n        return(\r\n            <div>\r\n                <table className=\"ui celled table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Form Id</th>\r\n                            <th>Form Name</th>\r\n                            <th># Submissions</th>\r\n                            <th>Submit Page\t</th>\r\n                            <th>Submissions Page</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>{this.props.forms.map(function(item,key){\r\n                        return(\r\n                            <tr key={key}>\r\n                            <td data-label=\"Form Id\">{item.id}</td>\r\n                            <td data-label=\"Form Name\">{item.title}</td>\r\n                            <td data-label=\"# Submissions\">{item.count}</td>\r\n                            <td data-label=\"Submit Page\">\r\n                                <a href={`/FormViewer/${item.id}/`}>View</a></td>\r\n                            <td data-label=\"Submissions Page\">\r\n                                <a href={`/DataViewer/${item.id}/`}>View</a></td>\r\n                            </tr>\r\n                         )\r\n                        })}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport Table from './Table';\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            forms:[],\r\n            // CreateForm:false\r\n        };\r\n      \r\n    }\r\n    //componentDidMount=async()=>{\r\n    async componentDidMount(){\r\n        await unsplash.get('/getTableDetails',{\r\n        }).then((response)=> {\r\n            if(response.success==='false'){\r\n\r\n            }\r\n            else{\r\n               \r\n                for(var i=0;i<response.data.length;i++)\r\n                {\r\n                    //Schema=(JSON.parse(TableData.data[i].formSchema));\r\n                    var  formObj={\r\n                        id:response.data[i].id,\r\n\r\n                        title:response.data[i].title,\r\n                        count:response.data[i].count\r\n                    }\r\n                    this.setState(prevState => ({\r\n                        forms: [...prevState.forms,formObj]\r\n                    }))\r\n                }\r\n            \r\n        }\r\n        }).catch((error)=> {\r\n            console.log(\"got error while posting data\", error);\r\n            });\r\n\r\n            console.log(this);\r\n    }\r\n   \r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n  \r\n    render(){\r\n        // console.log(this.props);\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n                <Table forms={this.state.forms}/>\r\n                <button\r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={()=>this.nextPath('/Wizard')}\r\n                >\r\n                 CreateForm\r\n                </button>   \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\n\r\nfunction WizardField({label, name, handleChange, type=\"text\"}) {\r\n    return(\r\n        <div>\r\n            <label>\r\n                {label}:\r\n            </label>\r\n            <input \r\n                type={type}\r\n                value={name} \r\n                onChange={handleChange}\r\n            />\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default WizardField;","import React from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nconst typeOptions = [\r\n  { key: 'text', value: 'text', text: 'text' },\r\n  { key: 'color', value: 'color', text: 'color' },\r\n  { key: 'date', value: 'date', text: 'date' },\r\n  { key: 'email', value: 'email', text: 'email' },\r\n  { key: 'tel', value: 'tel', text: 'tel' },\r\n  { key: 'number', value: 'number', text: 'number' },\r\n\r\n]\r\nfunction DropDownWizardField({label, name, handleChange}) {\r\n    return(\r\n        <div style={{marginTop:\"15px\" }}>\r\n            <label>\r\n                {label}:\r\n            </label>\r\n\r\n            <Dropdown \r\n            placeholder='Select type'\r\n            clearable \r\n            options={typeOptions} \r\n            selection\r\n            value={name} \r\n            onChange={handleChange}\r\n            />\r\n    </div>\r\n        );\r\n    }\r\n\r\nexport default DropDownWizardField;","import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport FieldsViewer from './FieldsViewer';\r\nvar result;\r\nclass FormViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:props.match.params.id,\r\n            Schema:[],\r\n            flag:false,\r\n            formData:[]\r\n\r\n        }\r\n\r\n    }\r\n     componentDidMount=async()=>{\r\n        await unsplash.post('/getFormSchema',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.success===true){\r\n                var schema=JSON.parse(response.data.data[0].formSchema);\r\n                this.setState({Schema:schema});\r\n                this.setState({flag:true});\r\n            }\r\n            else\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state.Schema);\r\n    }\r\n    \r\n    onFormSubmit=(e)=>{\r\n        //prevent the page refreshing every 'enter' press \r\n        e.preventDefault();\r\n\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n    SaveForm=(e)=>\r\n    {\r\n        unsplash.post(\"/SaveData\",{\r\n            data: this.state.formData,\r\n            id:this.state.id\r\n        }).then((response)=> {\r\n            if(response.success)\r\n                console.log(\"Data submitted successfully: \", response);\r\n                else\r\n                console.log(\"NO SUCESS! \",response);\r\n        }).catch((error)=> {\r\n           console.log(\"got errr while posting data\", error);\r\n        });\r\n    }\r\n    ChangeVal=(name,e)=>{\r\n        const fields={...this.state.formData}\r\n        fields[name]= e.target.value;\r\n        this.setState({formData:fields});\r\n    }\r\n    render(){  \r\n        if(this.state.flag){\r\n            result=this.state.Schema.properties.map((item, index)=>{\r\n\r\n                return(\r\n                <FieldsViewer\r\n                    key={index} \r\n                    label={item.label}\r\n                    type={item.type}\r\n                    handleChange={this.ChangeVal.bind(this, item.name)}\r\n\r\n                        />\r\n            \r\n                        )})\r\n            }\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div >\r\n                    <h1 className=\"ui header\">{this.state.Schema.title}</h1>\r\n                </div>\r\n                <form onSubmit={this.onFormSubmit}  className=\"ui form\"> \r\n                {     \r\n                      this.state.flag && [result]\r\n                }\r\n                 <button \r\n                    type='submit'\r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={this.SaveForm}>\r\n                       Done!\r\n                    </button>\r\n                </form>\r\n                <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button>   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormViewer;\r\n","import React from 'react';\r\nimport WizardField from './WizardField';\r\nimport DropDownWizardField from './DropDownWizardField';\r\n\r\n class PropertyCard extends React.Component{\r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            label:'',\r\n            name:'',\r\n            type:'',  \r\n        };\r\n        // this.ChangeName = this.ChangeName.bind(this);\r\n        // this.ChangeLabel = this.ChangeLabel.bind(this);\r\n        // this.ChangeType = this.ChangeType.bind(this);\r\n    }\r\n    \r\n    ChangeName=(e) => {\r\n        this.setState({ name: e.target.value });\r\n      }\r\n\r\n    ChangeLabel = (e) => {\r\n        this.setState({ label: e.target.value });\r\n      }\r\n\r\n    ChangeType = (e, { value }) => {\r\n        this.setState({ type:  value  });\r\n      }\r\n\r\n    CreateJson = () => {\r\n        this.props.GetPropertyJson(JSON.stringify(this.state));\r\n    }\r\n\r\n  \r\n    render(){\r\n        return(\r\n            <div>\r\n                <WizardField \r\n                label={'label'}\r\n                type={'text'}\r\n                name={this.state.label} \r\n                onUpdate={this} \r\n                handleChange={this.ChangeLabel}\r\n                />\r\n\r\n                <WizardField \r\n                label={'name'}\r\n                type={'text'}\r\n                name={this.state.name} \r\n                onUpdate={this} \r\n                handleChange={this.ChangeName}/>\r\n\r\n                <DropDownWizardField \r\n                label={'type'}\r\n                name={this.state.type} \r\n                onUpdate={this} \r\n                handleChange={this.ChangeType}/>\r\n\r\n                <button \r\n                style={{marginTop:\"10px\" }}\r\n                className=\"ui primary button\"\r\n                variant=\"primary\"\r\n            \r\n                onClick={ () => this.props.GetPropertyJson(JSON.stringify(this.state))}\r\n                >Done!</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PropertyCard;","import React from 'react';\r\n\r\nconst FieldsViewer=({label, handleChange, type=\"text\"})=>{\r\n    \r\n    return(\r\n        <div>\r\n           <label>{label}:</label>\r\n           <input\r\n               // required\r\n                type={type}\r\n                onChange={handleChange}\r\n                >          \r\n           </input>\r\n        </div>\r\n    );\r\n        \r\n    \r\n\r\n}\r\n\r\nexport default FieldsViewer;\r\n\r\n","import React from 'react';\r\nimport PropertyCard from './PropertyCard';\r\nimport FieldsViewer from './FieldsViewer';\r\nimport unsplash from '../api/unsplash';\r\n\r\n\r\nclass Wizard extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showCard:false,\r\n            title:'',\r\n            type:'',\r\n            name:'',\r\n            label:'',\r\n            fields:[]\r\n            \r\n            \r\n        };\r\n        this.AddField = this.AddField.bind(this);\r\n        this.CreateProperty = this.CreateProperty.bind(this);\r\n\r\n    }\r\n\r\n    CreateProperty=()=>{\r\n        this.setState({showCard:true});\r\n    }\r\n    onFormSubmit=(e)=>{\r\n        //prevent the page refreshing every 'enter' press \r\n        e.preventDefault();\r\n \r\n    }\r\n    AddField=(e)=>{\r\n        var prevState = JSON.parse(e);\r\n        this.setState({name:prevState['name']});\r\n        this.setState({label:prevState['label']});\r\n        this.setState({type:prevState['type']});\r\n        this.setState({showCard:false}); \r\n        // console.log(this);  \r\n        this.pushFieldToFields();\r\n    }\r\n\r\n    pushFieldToFields=()=>{\r\n        this.setState(prevState => ({\r\n            fields: [...prevState.fields, {name:prevState.name,\r\n                label:prevState.label,\r\n                type:prevState.type}]\r\n          }))\r\n        this.setState({name:''});\r\n        this.setState({label:''});\r\n        this.setState({type:''});\r\n\r\n          //console.log(this);  \r\n    }\r\n\r\n\r\n    SaveForm=()=>\r\n    {\r\n        const formObject={\r\n            title:this.state.title,\r\n            properties:this.state.fields\r\n        };\r\n        unsplash.post(\"/AddForm\",{\r\n            form: formObject\r\n        }).then((response)=> {\r\n           console.log(\"Data submitted successfully: \", response);\r\n        }).catch((error)=> {\r\n           console.log(\"got error while posting data\", error);\r\n        });\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n    render(){\r\n        const result = this.state.fields.map((field, index) =>{\r\n            return(\r\n                <FieldsViewer\r\n                    key={index} \r\n                    name={field.name}\r\n                    label={field.label}\r\n                    type={field.type}\r\n                    \r\n                />\r\n            )\r\n            })\r\n          \r\n        return(\r\n            <div className=\"ui segment\">\r\n            <form onSubmit={this.onFormSubmit} className=\"ui form\"> \r\n                <div className=\"field\">\r\n                    <input \r\n                        className=\"ui header\"\r\n                        placeholder=\"Place your form title here\"\r\n                        type=\"text\" \r\n                        value={this.state.title } \r\n                        onChange={(e)=>this.setState({title:e.target.value})}\r\n                    />\r\n\r\n                    <div>\r\n\r\n                    <button \r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={this.CreateProperty}>\r\n                        Add Field\r\n                    </button>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.showCard && <PropertyCard GetPropertyJson={this.AddField}/>\r\n                    }\r\n\r\n                  <div>\r\n                    {\r\n                        \r\n                        this.state.fields.length>0 && [result]\r\n                    }\r\n                    </div>\r\n\r\n                    <button \r\n                     type='submit'\r\n                    style={{marginTop:\"50px\" }}\r\n                    className=\"ui button\"\r\n                    onClick={this.SaveForm}>\r\n                       Done building my form\r\n                    </button>\r\n\r\n                </div>\r\n            </form>\r\n            <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button>\r\n        </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Wizard;","import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\n\r\nclass DataViewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            headers:[],\r\n            data:[]\r\n        }\r\n    }\r\n    nextPath=(path)=>{\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount=async()=>{\r\n        await unsplash.post('/getFormData',{\r\n            id:this.props.match.params.id\r\n        }).then((response)=> {\r\n            if(response.data.length>0){\r\n\r\n                for(var i=0;i<response.data.length;i++)\r\n                {\r\n                    //Schema=(JSON.parse(TableData.data[i].formSchema));\r\n                    var  formObj={\r\n                        row:response.data,\r\n\r\n                       \r\n                    }\r\n                    this.setState(prevState => ({\r\n                        data: [...prevState.data,formObj]\r\n                    }))\r\n                }\r\n \r\n            }\r\n            else{\r\n               \r\n\r\n            }\r\n            console.log(response);\r\n    }).catch((error)=> {\r\n        console.log(\"got error while posting data\", error);\r\n     });\r\n     console.log(this.state);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n            <table className=\"ui celled table\" id='FormData'>\r\n               <tbody>\r\n                 \r\n               </tbody>\r\n            </table>\r\n                 <button \r\n                style={{marginTop:\"50px\" }}\r\n                className=\"ui button\"\r\n                onClick={()=>this.nextPath('/')}>\r\n                    Back\r\n            </button> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataViewer;","import React from 'react';\r\nimport { Route, BrowserRouter as Router ,Switch} from 'react-router-dom';\r\nimport App from './App';\r\nimport Wizard from './Wizard';\r\nimport FormViewer from './FormViewer';\r\nimport DataViewer from './DataViewer';\r\n\r\n\r\n  class Start extends React.Component{\r\n    render(){\r\n      return(\r\n        <Router>\r\n            <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={App} />\r\n                <Route exact path=\"/Wizard\" component={Wizard} />\r\n                <Route path=\"/FormViewer/:id\" component={FormViewer} />\r\n                <Route path=\"/DataViewer/:id\" component={DataViewer} />\r\n            </Switch>\r\n            </div>\r\n    </Router>\r\n       \r\n      );\r\n    }\r\n  \r\n  }\r\n  \r\n  export default Start;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Start from './components/Start';\r\n\r\nReactDOM.render(<Start/>,document.querySelector('#root'));"],"sourceRoot":""}